# This is a basic workflow that is manually triggered

name: regression_test

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  NetXDuo:
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
      pages: write
      id-token: write
    uses: azure-rtos/threadx/.github/workflows/regression_template.yml@master
    with:
      build_script: ./scripts/build_nxd.sh
      test_script: ./scripts/test_nxd.sh
      cmake_path: ./test/cmake/netxduo
      result_affix: NetXDuo
      skip_deploy: true
  Web:
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
      pages: write
      id-token: write
    uses: azure-rtos/threadx/.github/workflows/regression_template.yml@master
    with:
      build_script: ./scripts/build_web.sh
      test_script: ./scripts/test_web.sh
      cmake_path: ./test/cmake/web
      result_affix: Web
      skip_deploy: true
  MQTT:
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
      pages: write
      id-token: write
    uses: azure-rtos/threadx/.github/workflows/regression_template.yml@master
    with:
      build_script: ./scripts/build_mqtt.sh
      test_script: ./scripts/test_mqtt.sh
      cmake_path: ./test/cmake/mqtt
      result_affix: MQTT
      skip_deploy: true
  NetXDuo64:
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
      pages: write
      id-token: write
    uses: azure-rtos/threadx/.github/workflows/regression_template.yml@master
    with:
      build_script: ./scripts/build_nxd64.sh
      test_script: ./scripts/test_nxd64.sh
      cmake_path: ./test/cmake/netxduo64
      result_affix: NetXDuo64
      skip_deploy: true
  NetXDuo_fast:
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
      pages: write
      id-token: write
    uses: azure-rtos/threadx/.github/workflows/regression_template.yml@master
    with:
      build_script: ./scripts/build_nxd_fast.sh
      test_script: ./scripts/test_nxd_fast.sh
      cmake_path: ./test/cmake/netxduo_fast
      result_affix: NetXDuo_fast
      skip_deploy: true
      skip_coverage: true
  Deploy:
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
      pages: write
      id-token: write
    needs: [NetXDuo, Web, MQTT, NetXDuo64, NetXDuo_fast]
    uses: azure-rtos/threadx/.github/workflows/regression_template.yml@master
    with:
      skip_test: true
      deploy_list: "NetXDuo Web MQTT NetXDuo64 NetXDuo_fast"